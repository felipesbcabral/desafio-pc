.app-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: var(--spacing-2);
  color: var(--color-primary);
}

.loading-inline {
  display: inline-flex;
  flex-direction: row;
  gap: var(--spacing-2);
}

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(2px);
  z-index: var(--z-loading);
}

// Size variants
.loading-xs {
  --loading-size: 1rem;
  --loading-text: var(--text-xs);
}

.loading-sm {
  --loading-size: 1.25rem;
  --loading-text: var(--text-sm);
}

.loading-md {
  --loading-size: 1.5rem;
  --loading-text: var(--text-base);
}

.loading-lg {
  --loading-size: 2rem;
  --loading-text: var(--text-lg);
}

.loading-xl {
  --loading-size: 3rem;
  --loading-text: var(--text-xl);
}

// Spinner variant
.loading-spinner {
  width: var(--loading-size);
  height: var(--loading-size);
}

.loading-spinner svg {
  width: 100%;
  height: 100%;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

// Dots variant
.loading-dots {
  display: flex;
  gap: calc(var(--loading-size) * 0.2);
  align-items: center;
}

.dot {
  width: calc(var(--loading-size) * 0.25);
  height: calc(var(--loading-size) * 0.25);
  background-color: currentColor;
  border-radius: 50%;
  animation: dotBounce 1.4s ease-in-out infinite both;
}

.dot-1 {
  animation-delay: -0.32s;
}

.dot-2 {
  animation-delay: -0.16s;
}

.dot-3 {
  animation-delay: 0s;
}

@keyframes dotBounce {
  0%, 80%, 100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

// Pulse variant
.loading-pulse {
  width: var(--loading-size);
  height: var(--loading-size);
  position: relative;
}

.pulse-circle {
  width: 100%;
  height: 100%;
  background-color: currentColor;
  border-radius: 50%;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0% {
    transform: scale(0.8);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.3;
  }
  100% {
    transform: scale(0.8);
    opacity: 1;
  }
}

// Bars variant
.loading-bars {
  display: flex;
  gap: calc(var(--loading-size) * 0.1);
  align-items: center;
  height: var(--loading-size);
}

.bar {
  width: calc(var(--loading-size) * 0.15);
  background-color: currentColor;
  border-radius: calc(var(--loading-size) * 0.075);
  animation: barStretch 1.2s ease-in-out infinite;
}

.bar-1 {
  animation-delay: -0.4s;
}

.bar-2 {
  animation-delay: -0.3s;
}

.bar-3 {
  animation-delay: -0.2s;
}

.bar-4 {
  animation-delay: -0.1s;
}

@keyframes barStretch {
  0%, 40%, 100% {
    height: 30%;
    opacity: 0.5;
  }
  20% {
    height: 100%;
    opacity: 1;
  }
}

// Loading text
.loading-text {
  font-size: var(--loading-text);
  color: var(--color-text-secondary);
  font-weight: var(--font-medium);
  text-align: center;
  margin-top: var(--spacing-1);
}

.loading-with-text.loading-inline .loading-text {
  margin-top: 0;
  margin-left: var(--spacing-2);
}

// Dark theme support - Temporarily disabled
/* @media (prefers-color-scheme: dark) {
  .loading-overlay {
    background-color: rgba(0, 0, 0, 0.8);
  }
} */

// Accessibility - Reduced motion
@media (prefers-reduced-motion: reduce) {
  .animate-spin,
  .dot,
  .pulse-circle,
  .bar {
    animation: none;
  }
  
  .loading-spinner svg {
    opacity: 0.7;
  }
  
  .dot {
    opacity: 0.7;
    transform: scale(0.9);
  }
  
  .pulse-circle {
    opacity: 0.7;
    transform: scale(1);
  }
  
  .bar {
    opacity: 0.7;
    height: 60%;
  }
}

// High contrast mode
@media (prefers-contrast: high) {
  .app-loading {
    color: var(--color-text-primary);
  }
  
  .loading-text {
    color: var(--color-text-primary);
  }
  
  .loading-overlay {
    background-color: rgba(255, 255, 255, 0.95);
    backdrop-filter: none;
  }
}

// Focus indicator for accessibility
.app-loading:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}